name: Run tests and release

on:
  push:
    tags:
    branches:
      - master
      - ci**
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # tests run on 20.04 (Qt 5.12), compile test on 20.10 (Qt 5.14)
        pg-version: ['9.6', '10', '11']
      fail-fast: true

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:${{ matrix.pg-version }}
        # Provide the password for postgres
        env:
          POSTGRES_USER: pirogue
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: pirogue_test_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    env:
      PGUSER: postgres

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install requirements
      run: |
        pip install -r requirements.txt

    - name: Setup
      run: |
        sed -i "s/__VERSION__/${TRAVIS_TAG:-0.0.0}/g" setup.py
        python setup.py install

    - name: Run tests
      run: |
        printf "[pirogue_test]\nhost=localhost\ndbname=pirogue_test_db\nuser=pirogue\npassword=1234\n\n" >> ~/.pg_service.conf
        ./test/test_simple_inheritance.sh
        pirogue -v
        nose2 -v

  deploy:
    runs-on: ubuntu-latest
    needs: ['test']
    steps:
    - name: Deploy to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

